# Generated by Django 2.0.4 on 2018-04-20 17:08

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('artist', models.CharField(max_length=100, verbose_name='Artist')),
                ('release_date', models.DateField(verbose_name='Release Date')),
                ('best', models.BooleanField(verbose_name='Best')),
                ('todo', models.BooleanField(verbose_name='TODO')),
                ('listen_date', models.DateField(blank=True, null=True, verbose_name='Listen Date')),
                ('genres', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['title'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('artist', models.CharField(max_length=100, verbose_name='Artist')),
                ('release_date', models.DateField(verbose_name='Release Date')),
                ('fantastic_find', models.BooleanField(verbose_name='Fantastic Find')),
                ('listen_date', models.DateField(auto_now_add=True, verbose_name='Listen Date')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='music.Album')),
                ('genres', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['title'],
                'abstract': False,
            },
        ),
    ]
